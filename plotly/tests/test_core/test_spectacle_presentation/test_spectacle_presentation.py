"""
test_spectacle_presentation:
==========

A module intended for use with Nose.

"""
from __future__ import absolute_import

from unittest import TestCase
from plotly.exceptions import PlotlyError
import plotly.presentation_objs as pres

class TestPresentation(TestCase):

    def test_invalid_style(self):
        markdown_string = """
        # one slide
        """

        message = 'Your presentation style must be moods or martik.'

        self.assertRaisesRegexp(PlotlyError, message, pres.Presentation,
                                markdown_string, style='foo')

    def test_open_code_block(self):
        markdown_string = """
        # one slide

        ```python
        x = 2 + 2
        print x
        """

        message = (
            "If you are putting a block of code into your markdown "
            "presentation, make sure your denote the start and end "
            "of the code environment with the '```' characters. For "
            "example, your markdown string would include something "
            "like:\n\n```python\nx = 2\ny = 1\nprint x\n```\n\n"
            "Notice how the language that you want the code to be "
            "displayed in is immediately to the right of first "
            "entering '```', i.e. '```python'."
        )

        self.assertRaisesRegexp(PlotlyError, message, pres.Presentation,
                                markdown_string, style='moods')

    def test_invalid_code_language(self):
        markdown_string = """
        ```foo
        x = 2 + 2
        print x
        ```
        """

        message = (
            "The language of your code block should be "
            "clearly indicated after the first ``` that "
            "begins the code block. The valid languages to "
            "choose from are" + pres.presentation_objs.list_of_options(
                pres.presentation_objs.VALID_LANGUAGES
            )
        )

        self.assertRaisesRegexp(PlotlyError, message, pres.Presentation,
                                markdown_string, style='moods')

    def test_expected_pres(self):
        markdown_string = """
        transition: zoom
        # title
        more text

        url(https://raw.githubusercontent.com/jackparmer/gradient-backgrounds/master/moods1.png)

        ```python
        def func(x, y):
            return x, y
        ```
        url(https://plot.ly/~AdamKulidjian/3564)
        """

        my_pres = pres.Presentation(markdown_string)

        expected_pres = {'presentation': {'paragraphStyles': {'Body': {'color': '#3d3d3d',
            'fontFamily': 'Open Sans',
            'fontSize': 11,
            'fontStyle': 'normal',
            'fontWeight': 400,
            'lineHeight': 'normal',
            'minWidth': 20,
            'opacity': 1,
            'textAlign': 'center',
            'textDecoration': 'none'},
           'Body Small': {'color': '#3d3d3d',
            'fontFamily': 'Open Sans',
            'fontSize': 10,
            'fontStyle': 'normal',
            'fontWeight': 400,
            'lineHeight': 'normal',
            'minWidth': 20,
            'opacity': 1,
            'textAlign': 'center',
            'textDecoration': 'none'},
           'Caption': {'color': '#3d3d3d',
            'fontFamily': 'Open Sans',
            'fontSize': 11,
            'fontStyle': 'italic',
            'fontWeight': 400,
            'lineHeight': 'normal',
            'minWidth': 20,
            'opacity': 1,
            'textAlign': 'center',
            'textDecoration': 'none'},
           'Heading 1': {'color': '#3d3d3d',
            'fontFamily': 'Open Sans',
            'fontSize': 26,
            'fontStyle': 'normal',
            'fontWeight': 400,
            'lineHeight': 'normal',
            'minWidth': 20,
            'opacity': 1,
            'textAlign': 'center',
            'textDecoration': 'none'},
           'Heading 2': {'color': '#3d3d3d',
            'fontFamily': 'Open Sans',
            'fontSize': 20,
            'fontStyle': 'normal',
            'fontWeight': 400,
            'lineHeight': 'normal',
            'minWidth': 20,
            'opacity': 1,
            'textAlign': 'center',
            'textDecoration': 'none'},
           'Heading 3': {'color': '#3d3d3d',
            'fontFamily': 'Open Sans',
            'fontSize': 11,
            'fontStyle': 'normal',
            'fontWeight': 700,
            'lineHeight': 'normal',
            'minWidth': 20,
            'opacity': 1,
            'textAlign': 'center',
            'textDecoration': 'none'}},
          'slidePreviews': [None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None,
           None],
          'slides': [{'children': [{'children': ['title'],
              'defaultHeight': 36,
              'defaultWidth': 52,
              'id': 'jHft0hhYP',
              'props': {'isQuote': False,
               'listType': None,
               'paragraphStyle': 'Body',
               'size': 4,
               'style': {'color': '#000016',
                'fontFamily': 'Roboto',
                'fontSize': 42,
                'fontStyle': 'normal',
                'fontWeight': 900,
                'height': 140.0,
                'left': 0.0,
                'lineHeight': 'normal',
                'minWidth': 20,
                'opacity': 1,
                'position': 'absolute',
                'textAlign': 'center',
                'textDecoration': 'none',
                'top': 21.0,
                'width': 1000.0,
                'wordBreak': 'break-word'}},
              'resizeVertical': False,
              'type': 'Text'},
             {'children': ['more text'],
              'defaultHeight': 36,
              'defaultWidth': 52,
              'id': 'K57r3kQyh',
              'props': {'isQuote': False,
               'listType': None,
               'paragraphStyle': 'Body',
               'size': 4,
               'style': {'color': '#000016',
                'fontFamily': 'Roboto',
                'fontSize': 16,
                'fontStyle': 'normal',
                'fontWeight': 100,
                'height': 14.0,
                'left': 25.0,
                'lineHeight': 'normal',
                'minWidth': 20,
                'opacity': 1,
                'position': 'absolute',
                'textAlign': 'left',
                'textDecoration': 'none',
                'top': 663.0810810810812,
                'width': 950.0000000000001,
                'wordBreak': 'break-word'}},
              'resizeVertical': False,
              'type': 'Text'},
             {'children': [],
              'id': 'tv9CPQ1jA',
              'props': {'height': 512,
               'imageName': None,
               'src': 'https://raw.githubusercontent.com/jackparmer/gradient-backgrounds/master/moods1.png',
               'style': {'height': 280.0,
                'left': 0.0,
                'opacity': 1,
                'position': 'absolute',
                'top': 70.0,
                'width': 330.66666666666663},
               'width': 512},
              'type': 'Image'},
             {'children': [],
              'id': '27narQlfo',
              'props': {'frameBorder': 0,
               'scrolling': 'no',
               'src': 'https://plot.ly/~AdamKulidjian/3564.embed?link=false',
               'style': {'height': 280.0,
                'left': 334.66666666666663,
                'position': 'absolute',
                'top': 70.0,
                'width': 330.66666666666663}},
              'type': 'Plotly'},
             {'children': [],
              'defaultText': 'Code',
              'id': 'IEqXfULvo',
              'props': {'language': 'python',
               'source': 'def func(x, y):\n    return x, y\n',
               'style': {'fontFamily': "Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace",
                'fontSize': 13,
                'height': 280.0,
                'left': 669.3333333333333,
                'margin': 0,
                'position': 'absolute',
                'textAlign': 'left',
                'top': 70.0,
                'width': 330.66666666666663},
               'theme': 'tomorrowNight'},
              'type': 'CodePane'}],
            'id': 'Vi57Xend2',
            'props': {'style': {'backgroundColor': '#FFFFFF'},
             'transition': ['zoom']}}],
          'version': '0.1.3'}
    }

        self.assertEqual(
            my_pres['presentation']['version'],
            expected_pres['presentation']['version']
        )

        self.assertEqual(
            my_pres['presentation']['paragraphStyles'],
            expected_pres['presentation']['paragraphStyles']
        )

        self.assertEqual(
            my_pres['presentation']['slidePreviews'],
            expected_pres['presentation']['slidePreviews']
        )

        #for i in range(4):
        #    self.assertEqual(
        #        my_pres['presentation']['slides'][0]['children'][i]['children'],
        #        expected_pres['presentation']['slides'][0]['children'][i]['children']
        #    )
